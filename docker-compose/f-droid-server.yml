version: '2'

services:
  web:
    image: registry.gitlab.com/fdroid/repomaker:latest
    hostname: ${REPOMAKER_HOSTNAME}
    domainname: ${REPOMAKER_HOSTNAME}
    environment:
      # These variables would typically be in a .env file,
      # but we put them directly here for Docker Compose Manager convenience if not using a separate .env file.
      # You MUST replace these with your actual PostgreSQL connection details.
      - DATABASE_URL=${DATABASE_URL:-postgresql://repomaker_user:your_db_password@your_db_host:5432/repomaker_db}
    command: bash -c './wait-for ${DB_HOST}:5432 -- python3 manage.py migrate && ./httpd-foreground'
    volumes:
      - ${REPOMAKER_PATH}/data:/repomaker/data
    ports:
      - "${REPOMAKER_PORT}:80"
    # No depends_on db here, as we assume db is managed externally
    # You might need to manually ensure DB is running first, or rely on wait-for.
    restart: unless-stopped

  tasks:
    image: registry.gitlab.com/fdroid/repomaker:latest
    environment:
      # These variables would typically be in a .env file,
      # but we put them directly here for Docker Compose Manager convenience if not using a separate .env file.
      # You MUST replace these with your actual PostgreSQL connection details.
      - DATABASE_URL=${DATABASE_URL:-postgresql://repomaker_user:your_db_password@your_db_host:5432/repomaker_db}
    command: bash -c './wait-for ${WEB_HOST}:80 -- su www-data -p -s /bin/bash -c "cd /repomaker && python3 manage.py process_tasks"'
    volumes:
      - ${REPOMAKER_PATH}/data:/repomaker/data
    depends_on:
      - web # This depends_on will work within Docker Compose Manager
    restart: unless-stopped
